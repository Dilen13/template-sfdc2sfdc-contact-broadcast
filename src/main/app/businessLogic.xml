<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" 
xmlns="http://www.mulesoft.org/schema/mule/core" 
xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
xmlns:spring="http://www.springframework.org/schema/beans" 
xmlns:json="http://www.mulesoft.org/schema/mule/json"
version="EE-3.5.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd">
    <batch:job name="businessLogicBatch">
        <batch:threading-profile poolExhaustedAction="WAIT"/>
        <batch:process-records>
            <batch:step name="foreachContactInAGetContactBStep">
            	<enricher source="#[payload]" target="#[recordVars['idInB']]" doc:name="store payload in variable idInB">
        			<sfdc:query-single config-ref="SalesforceB" query="SELECT Id FROM Contact WHERE Email = '#[payload['Email']]'" doc:name="query Contact from Salesforce Instance B"/>
        		</enricher>
            </batch:step>
            <batch:step name="foreachContactInAUpsertContactInBStep"> 
            	<expression-component doc:name="set Id for upsert"><![CDATA[if (recordVars['idInB'] instanceof NullPayload) {
		         		payload.remove('Id') 
		      		} else { 
		        			payload.put('Id',recordVars['idInB'].get('Id'))}]]> 
	  			</expression-component>
	            <expression-component doc:name="remove LastModifiedDate for upsert"><![CDATA[payload.remove('LastModifiedDate')]]> 
	  			</expression-component>
                <batch:commit size="200" doc:name="Batch Commit" >
                	<logger message="Contact to update/create: #[payload]"	level="INFO" doc:name="log 'Contact objects to update/create'" />
           	        <sfdc:upsert config-ref="SalesforceB" externalIdFieldName="Id" type="Contact" doc:name="upsert Contacts in Org B">
            			<sfdc:objects ref="#[payload]"/>
        			</sfdc:upsert>
                </batch:commit>
            </batch:step>
        </batch:process-records>
        <batch:on-complete>
			<json:object-to-json-transformer	doc:name="transform BatchJobInstance to JSON" />
			<logger level="INFO" doc:name="log 'One Way Sync has finished'" message="One Way Sync has finished: #[payload]"/>
        </batch:on-complete>
    </batch:job>

</mule>
