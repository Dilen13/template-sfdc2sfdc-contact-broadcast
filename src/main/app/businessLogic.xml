<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" 
xmlns="http://www.mulesoft.org/schema/mule/core" 
xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
xmlns:spring="http://www.springframework.org/schema/beans" 
xmlns:json="http://www.mulesoft.org/schema/mule/json"
version="EE-3.5.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd">
    <batch:job name="businessLogicBatch1">
        <batch:input>
           	<poll doc:name="fireup Custom object synchronization" >
            	<fixed-frequency-scheduler frequency="${polling.frequency}" />
            	<watermark variable="lastQueryDate" default-expression="${watermark.default.expression}" selector="MAX" selector-expression="#[payload.LastModifiedDate]"/>
             	<sfdc:query-all config-ref="SalesforceA"   doc:name="query Contacts with filtering criteria from Salesforce Instance A" query="SELECT Email, FirstName, LastName, Id, LastModifiedDate FROM Contact WHERE LastModifiedDate &gt; #[flowVars['lastQueryDate']] AND Email != null AND MailingCountry IN ('U.S.','United States','US')">
            	</sfdc:query-all>
        	</poll>
        </batch:input>
        <batch:process-records>
            <batch:step name="Batch_Step">
            	<enricher source="#[payload]" target="#[flowVars['idInB']]" doc:name="store payload in variable idInB">
        			<sfdc:query-single config-ref="SalesforceB" query="SELECT Id FROM Contact WHERE Email = '#[payload['Email']]'" doc:name="query Contact from Salesforce Instance B"/>
        		</enricher>
            </batch:step>
            <batch:step name="Batch_Step1"> 
            	<expression-component doc:name="set Id for upsert"><![CDATA[if (flowVars['idInB'] instanceof NullPayload) {
		         		payload.remove('Id') 
		      		} else { 
		        			payload.put('Id',flowVars['idInB'].get('Id'))}]]> 
	  			</expression-component>
	            <expression-component doc:name="remove LastModifiedDate for upsert"><![CDATA[payload.remove('LastModifiedDate')]]> 
	  			</expression-component>
                <batch:commit size="" doc:name="Batch Commit" >
                	<logger message="Custom objects to update/create: #[payload]"	level="INFO" doc:name="log Custom objects to update/create" />
           	        <sfdc:upsert config-ref="SalesforceB" externalIdFieldName="Id" type="Contact" doc:name="upsert Contacts in Org B">
            			<sfdc:objects ref="#[payload]"/>
        			</sfdc:upsert>
                </batch:commit>
            </batch:step>
        </batch:process-records>
        <batch:on-complete>
			<json:object-to-json-transformer	doc:name="transform BatchJobInstance to JSON" />
			<logger level="INFO" doc:name="log 'Migration process has finished'" message="One Way Sync has finished: #[payload]"/>
        </batch:on-complete>
    </batch:job>
    <flow name="mainFlow" processingStrategy="synchronous" doc:name="mainFlow" doc:description="This flow is the entry point to the Kick business logic.

This flow should control the direction of the application, and it should be called by the different endpoints that your Kick exposes to trigger it.">
        <flow-ref name="processDataFlow" doc:name="call processDataFlow"/>
        <flow-ref name="outboundFlow" doc:name="call outboundFlow"/>
    	<exception-strategy ref="defaultChoiceExceptionStrategy" doc:name="catch Exception and call defaultChoiceExceptionStrategy"/>
    </flow>
    
    <flow name="processDataFlow" processingStrategy="synchronous" doc:name="processDataFlow">
        <set-variable variableName="contactList" value="#[new java.util.ArrayList()]" doc:name="set contactList variable"/>
        <foreach doc:name="For Each">
   	        <enricher source="#[payload]" target="#[flowVars['idInB']]" doc:name="store payload in variable idInB">
        		<sfdc:query-single config-ref="SalesforceB" query="SELECT Id FROM Contact WHERE Email = '#[payload['Email']]'" doc:name="check Contact in org B"/>
        	</enricher>
        	<expression-component doc:name="set Id for upsert"><![CDATA[if (flowVars['idInB'] instanceof NullPayload) {
         		payload.remove('Id') 
      		} else { 
        			payload.put('Id',flowVars['idInB'].get('Id'))}]]> 
  			</expression-component>
            <expression-component doc:name="remove LastModifiedDate for upsert"><![CDATA[payload.remove('LastModifiedDate')]]> 
  			</expression-component>
  			<expression-component doc:name="add Contact to contactList"><![CDATA[contactList.add(payload)]]></expression-component>
        </foreach>
    </flow>
    
   <flow name="outboundFlow" processingStrategy="synchronous" doc:name="outboundFlow">
        <set-payload value="#[contactList]" doc:name="set to contactList"/>
        <logger message="#[payload]" level="INFO" doc:name="log Contacts to be created/updated"/>
        <sfdc:upsert config-ref="SalesforceB" externalIdFieldName="Id" type="Contact" doc:name="upsert Contacts in Org B">
            <sfdc:objects ref="#[payload]"/>
        </sfdc:upsert>
        <logger message="#[payload]" level="INFO" doc:name="log upsert result"/>
    </flow>

</mule>
