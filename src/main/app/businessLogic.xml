<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" 
xmlns="http://www.mulesoft.org/schema/mule/core" 
xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
xmlns:spring="http://www.springframework.org/schema/beans" 
xmlns:json="http://www.mulesoft.org/schema/mule/json"
version="EE-3.7.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd">
    <batch:job name="businessLogicBatch">
    
        <batch:threading-profile poolExhaustedAction="WAIT"/>
        <batch:process-records>
            <batch:step name="getContactInBStep">
                <enricher source="#[payload == null ? null : payload.Id]" target="#[payload.Id]" doc:name="store result in 'payload.Id'">
                    <sfdc:query-single config-ref="SalesforceB" query="SELECT Id FROM Contact WHERE Email = '#[payload['Email']]'" doc:name="Query contact in Salesforce instance B"/>
                </enricher>
            </batch:step>
            <batch:step name="findOrCreateAccountInBStep" accept-expression="'syncAccount' == '${account.sync.policy}'">
                <choice doc:name="Choice">
                    <when expression="#[payload['Account'] != null]">
                        <flow-ref name="findOrCreateAccountFlow" doc:name="Trigger findOrCreateAccountFlow"/>
                    </when>
                    <otherwise>
                        <logger message="There is no Account assigned to this contact. Doing nothing" level="INFO" doc:name="Logger"/>
                    </otherwise>
                </choice>

            </batch:step>

            <batch:step name="createContactsInBStep" accept-expression="!(payload is NullPayload)">

            	
                <batch:commit size="200" doc:name="Batch Commit">
                    <dw:transform-message doc:name="Transform Message">
                        <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map
{
	Id: $.Id,
	Email: $.Email,
	Description: $.Description,
	FirstName: $.FirstName,
	LastName: $.LastName,
	MailingCountry: $.MailingCountry,
	Title: $.Title,
	AccountId: $.AccountId when ($.AccountId != null) otherwise null
}]]></dw:set-payload>
                    </dw:transform-message>
					<sfdc:upsert config-ref="SalesforceB"  type="Contact" doc:name="Upsert contacts in org B" externalIdFieldName="Id">
                        <sfdc:objects ref="#[payload]"/>
					</sfdc:upsert>

                </batch:commit>
            </batch:step>
        </batch:process-records>
        <batch:on-complete>
			<json:object-to-json-transformer doc:name="Transform BatchJobInstance to JSON" />
			<logger level="INFO" doc:name="Log 'broacast has finished'" message="One Way Sync has finished: #[payload]"/>
        </batch:on-complete>
    </batch:job>
    <flow name="mainFlow" >
        <batch:execute name="businessLogicBatch" doc:name="Trigger businessLogicBatch"/>
        <exception-strategy ref="defaultChoiceExceptionStrategy" doc:name="Reference Exception Strategy"/>
    </flow>
<sub-flow name="findOrCreateAccountFlow" >
        <enricher source="#[payload == null ? null : payload.Id]" target="#[payload.AccountId]" doc:name="store result in 'payload.AccountId'">
            <sfdc:query-single config-ref="SalesforceB" query="SELECT Id FROM Account WHERE Name = '#[payload['Account']['Name']]'" doc:name="Query Account in  Salesforce Instance B"/>
        </enricher>
        <choice doc:name="Choice">
            <when expression="#[payload['AccountId'] == null]">
                <flow-ref name="createNewAccountFlow" doc:name="Trigger CreateNewAccountFlow"/>
            </when>
            <otherwise>
                <logger message="Account already exists. Nothing to create." level="INFO" doc:name="Logger"/>

            </otherwise>
        </choice>

    </sub-flow>
    <sub-flow name="createNewAccountFlow" >
        <enricher target="#[payload['AccountId']]" doc:name="store result in 'payload.AccountId'">
            <processor-chain doc:name="Processor Chain">
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	AccountNumber: payload.Account.AccountNumber,
	Description : payload.Account.Description,
	Id: null,
	Name: payload.Account.Name,
	(NumberOfEmployees : payload.Account.NumberOfEmployees as :number) when (payload.Account.NumberOfEmployees != null),
	Industry: payload.Account.Industry
}]]></dw:set-payload>
                </dw:transform-message>

                <sfdc:create-single config-ref="SalesforceB" type="Account" doc:name="Create Account in Salesforce Instance B">

                </sfdc:create-single>
                <expression-transformer expression="#[payload.getId()]" doc:name="Get new account id"/>

            </processor-chain>
        </enricher>
    </sub-flow>
</mule>
